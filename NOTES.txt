XXX
---
XXX update this file

================================
TITLE: INSTALL RASPBERRY PI
================================

Notes:
- to reinstall: press shift when booting
- to repair
  . press shift when booting
  . add to config   init=/bin/sh
  . mount -o remount,rw /

Install from NOOBS flash card

Configure using raspi-config
- disable X windows, use consle login screen
- Note - X windows can be broght up later using 'startx'

Add user account 
- create .bashrc, .bash_profile, .vimrc, .ssh
- add sudo access

Updates, and additional packages, run as root:
  apt-get update
  apt-get install libudev-dev
  apt-get install libevdev-dev
  apt-get install tk
  apt-get install vim

Install SDL2
- script is here, or see copy below
    https://gist.github.com/blacktm/8268a468f933eba46f80
- description of problem getting keybd events
    https://forums.libsdl.org/viewtopic.php?t=10483&sid=38991cf938c103990a18f389312e0f42

To Run SDL2 Test Pgm
- export LD_LIBRARY_PATH=/usr/local/lib
     The following note is from the SDL build output:
          If you ever happen to want to link against installed libraries
          in a given directory, LIBDIR, you must either use libtool, and
          specify the full pathname of the library, or use the `-LLIBDIR'
          flag during linking and do at least one of the following:
             - add LIBDIR to the `LD_LIBRARY_PATH' environment variable
               during execution
             - add LIBDIR to the `LD_RUN_PATH' environment variable
               during linking
             - use the `-Wl,-rpath -Wl,LIBDIR' linker flag
             - have your system administrator add LIBDIR to `/etc/ld.so.conf'
      See any operating system documentation about shared libraries for
      more information, such as the ld(1) and ld.so(8) manual pages.
- run as root

Apply USB Patch
- add the folloing to /boot/cmdline.txt, and reboot
      dwc_otg.fiq_fsm_enable=0
- see https://github.com/raspberrypi/linux/issues/618 for information
- this seems to fix a webcam failure that occurs when closing and reopening the /dev/video0

=================================
TITLE: GRAPHICS ACCELERATOR
=================================
 
Not needed to run the fusor instrumentation program.

To test graphics accelerator:
- need to configure advanced gpu driver using raspi-config
- sudo apt-get install mesa-utils
- glxgears
- should see about 60 FPS and no graphics glitches
- note: I did see a hang with graphics accel enabled, when resising terminal
        window;  so suggest don't use X windows

================================
TITLE: BUILD AND INSTALL SDL2 ON RASPBERRY PI
https://gist.github.com/blacktm/8268a468f933eba46f80
================================

#!/bin/bash

# --------------------------------------------------------
# Installs SDL2 from source on the Raspberry Pi (Raspbian)
#
# Run from the web:
#   bash <(curl -s raw_script_url_here)
# --------------------------------------------------------

bold="\033[1m"
normal="\033[0m"

# Welcome message
echo -e "\n${bold}This will install SDL2 from source."
echo -e "It will take about an hour to compile on the Raspberry Pi.${normal}"

# Prompt to continue
read -p "  Continue? (y/n) " ans
if [[ $ans != "y" ]]; then
  echo -e "\nQuitting...\n"
  exit
fi
echo

# Time the install process
START_TIME=$SECONDS

# Setting up SDL2 variables
url="http://www.libsdl.org"

sdl="SDL2-2.0.3"
sdl_url="${url}/release/${sdl}.tar.gz"

image="SDL2_image-2.0.0"
image_url="${url}/projects/SDL_image/release/${image}.tar.gz"

mixer="SDL2_mixer-2.0.0"
mixer_url="${url}/projects/SDL_mixer/release/${mixer}.tar.gz"

ttf="SDL2_ttf-2.0.12"
ttf_url="${url}/projects/SDL_ttf/release/${ttf}.tar.gz"

get () {
  cd /tmp
  wget -N $1
  tar -xzf $2.tar.gz
  cd $2
  ./configure && make && sudo make install
  rm /tmp/$2.tar.gz
  rm -rf /tmp/$2
}

get ${sdl_url} ${sdl}
get ${image_url} ${image}
get ${mixer_url} ${mixer}

sudo apt-get install -y libfreetype6-dev  # ttf dependency
get ${ttf_url} ${ttf}

# Print the time elapsed
ELAPSED_TIME=$(($SECONDS - $START_TIME))
echo -e "\n${bold}Finished in $(($ELAPSED_TIME/60/60)) hr, $(($ELAPSED_TIME/60%60)) min, and $(($ELAPSED_TIME%60)) sec${normal}\n"

================================
TITLE: SAMPLES of .bashrc, .bash_profile, .vimrc
================================

XXX check these

---- .bashrc ---

# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# update ulimit for core dump
ulimit -c unlimited

# General Command aliases
alias ls='ls -l --color=always --group-directories-first --human-readable'
alias bashrc='source ~/.bashrc'
alias bash_profile='source ~/.bash_profile'

# cd aliases
alias pf='cd ~/proj_fusor'

--- .bash_profile ---

# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
	. ~/.bashrc
fi

# User specific environment and startup programs
export PATH=$PATH:.:$HOME/bin
export GIT_EXTERNAL_DIFF=~/bin/git_external_diff
export LD_LIBRARY_PATH=/usr/local/lib
export PS1='[HOME \u@\h \W]\$ '

--- .vimrc ---

" use 4 spaces for tab indent
set expandtab
set tabstop=8
set softtabstop=4
set shiftwidth=4

" color scheme
set background=dark
colors default
syntax on
